@model ICI.ProvaCandidato.Dados.Entities.Noticia

<div id="confirmarExclusaoElement" data-message="@TempData["Message"]" type="hidden"></div>

<div class="container">
    <div class="row">
        <div class="col-sm-12 col-md-8">
            <form asp-controller="Noticias" asp-action="Criar" method="post" onsubmit="return validarFormulario()">
                <h1 class="mt-1" style="font-size: 20px;">@(Model.Id == 0 ? "Cadastro" : "Edição")</h1>
                <div class="form-group">
                    <label for="Titulo">Título:</label>
                    <input type="text" class="form-control" id="Titulo" name="Titulo" value="@Model.Titulo" oninput="limitarTitulo()">
                    <p id="contadorTitulo"></p>
                    <span asp-validation-for="Titulo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Texto">Texto:</label>
                    <textarea class="form-control" id="Texto" name="Texto" rows="5" oninput="limitarTexto()">@Model.Texto</textarea>
                    <p id="contadorTexto"></p>
                    <span asp-validation-for="Texto" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="TagsSelecionadas">Tags:</label>
                    <select multiple class="form-control" id="TagsSelecionadas" name="TagsSelecionadas">
                        @foreach (var tag in ViewBag.Tags as SelectList)
                        {
                            <option value="@tag.Value">@tag.Text</option>
                        }
                    </select>
                    <span asp-validation-for="NoticiaTags" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="UsuarioId">Usuário:</label>
                    <select class="form-control" id="UsuarioId" name="UsuarioId">
                        @foreach (var usuario in ViewBag.Usuarios as SelectList)
                        {
                            <option value="@usuario.Value">@usuario.Text</option>
                        }
                    </select>
                </div>

                <div class="form-group row">
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-sm btn-primary my-2 my-sm-0 form-control form-control-sm">
                            @{
                                var buttonText = Model.Id == 0 ? "Criar Notícia" : "Salvar Edição";
                                @Html.Raw(buttonText);
                            }
                        </button>
                    </div>
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-sm btn-success my-2 my-sm-0 form-control form-control-sm" onclick="limparCampos()">Limpar Campos</button>
                    </div>
                </div>

                <div class="form-group">
                    <a class="btn btn-sm btn-secondary my-2 my-sm-0 form-control form-control-sm" asp-action="Noticias" data-toggle="tooltip" title="Editar">Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>


<script>

    // Função para definir as opções selecionadas com base nos valores da notícia
    function definirOpcoesSelecionadas() {
        var tagsSelecionadas = @Html.Raw(Json.Serialize(Model.NoticiaTags?.Select(nt => nt.TagId).ToList()));
        var usuarioSelecionado = @Html.Raw(Json.Serialize(Model.UsuarioId));

        document.getElementById("TagsSelecionadas").value = tagsSelecionadas;
        document.getElementById("UsuarioId").value = usuarioSelecionado;
    }

    // Chame a função ao carregar a página para definir as opções selecionadas
    window.onload = definirOpcoesSelecionadas;

</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_CustomConfirm");
    }
}